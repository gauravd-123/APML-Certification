{"version":3,"sources":["b1.jpg","hiw.jpg","b3.jpg","web3.js","components/navbar.jsx","components/form.jsx","components/certfound.jsx","components/getcert.jsx","components/reg.jsx","components/intro.jsx","config.js","components/certificate.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","web3","Web3","givenProvider","Navhead","state","react_default","a","createElement","Navbar","className","bg","variant","expand","Brand","mb","href","Toggle","aria-controls","Collapse","id","Nav","Item","react_router_dom","to","Component","Forms","handleChange","event","_this","setState","Object","defineProperty","target","name","value","addcertificate","preventDefault","props","fname","lname","course","email","_this$state","this","length","isEnabled","canBeSubmitted","style","height","backgroundColor","backgroundSize","fontFamily","fontWeight","fontSize","color","marginBottom","background","Form","onSubmit","Group","Control","type","onChange","placeholder","Button","disabled","CertFound","sender","border","marginTop","borderBottom","marginLeft","details","Getcert","getcertificate","gettransaction","url","txh","window","open","console","log","isEnabledid","canBeSubmittedid","isEnabledtxh","canBeSubmittedtxh","concat","b1","width","yes","certfound","Reg","sendmail","location","Intro","src","hiw","alt","config","eth","Contract","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","Certificate","onclickprint","print","sname","onClick","App","account","output","tofound","add","data","certcontract","methods","addcert","send","from","gas","error","result","getid","call","get","getcert","alert","v","values","loadBlockchainData","ethereum","enable","getAccounts","accounts","defaultAccount","_this2","navbar","react_router","path","exact","render","components_form","component","certificate","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57ed0b0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/b1.e976df5a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hiw.8f5bf972.jpg\";","module.exports = __webpack_public_path__ + \"static/media/b3.5cc5e014.jpg\";","import Web3 from \"web3\";\r\n\r\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n\r\nexport default web3;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../nav.css\";\r\nclass Navhead extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Navbar className=\"bar\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand mb={0} href=\"#home\">\r\n          APML\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Item className=\"mt-2 mr-2 \">\r\n              <Link to=\"/\">Home</Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"mt-2 ml-2 mr-3\">\r\n              <Link to=\"/reg\">Register</Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"mt-2 ml-2 mr-3\">\r\n              <Link to=\"/intro\">How it works</Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"mt-2 ml-2 mr-3\">\r\n              <Link to=\"/verify\">Verify</Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"mt-2 mr-3\">\r\n              <Link to=\"/view\">View Certificate</Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navhead;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport b3 from \"../b3.jpg\";\r\nclass Forms extends Component {\r\n  canBeSubmitted() {\r\n    const { fname, lname, course, email } = this.state;\r\n    return (\r\n      fname.length > 0 &&\r\n      lname.length > 0 &&\r\n      course.length > 0 &&\r\n      email.length > 0\r\n    );\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  addcertificate = event => {\r\n    event.preventDefault();\r\n    this.props.addcertificate(this.state);\r\n    //console.log(this);\r\n  };\r\n\r\n  state = {\r\n    fname: \"\",\r\n    lname: \"\",\r\n    course: \"\",\r\n    email: \"\"\r\n  };\r\n  render() {\r\n    const isEnabled = this.canBeSubmitted();\r\n    return (\r\n      <div\r\n        className=\"container-fluid \"\r\n        style={{\r\n          height: \"100%\",\r\n          //backgroundImage: `url(${b1})`,\r\n          // background: `url(${b3})`,\r\n          backgroundColor: \"#ff9933\",\r\n          backgroundSize: \"cover\"\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            fontFamily: \"Montserrat\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"60px\",\r\n            color: \"#003300\"\r\n          }}\r\n          className=\"mb-5 pt-3\"\r\n        >\r\n          APML Blockchain Certification\r\n        </h1>\r\n        <div\r\n          style={{ marginBottom: \"117px\", background: \"rgba(255,255,255,0.5)\" }}\r\n          className=\"w-50 container pt-3 pb-3 mx-auto\"\r\n        >\r\n          <h2\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Montserrat\"\r\n            }}\r\n            className=\"mb-2\"\r\n          >\r\n            Enter the Certificate Details\r\n          </h2>\r\n          <Form onSubmit={this.addcertificate}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                value={this.state.fname}\r\n                onChange={this.handleChange}\r\n                placeholder=\"First name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lname\"\r\n                value={this.state.lname}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Last name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Email@email.com\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"course\"\r\n                value={this.state.course}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Course name\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={!isEnabled}\r\n              className=\"mt-3\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Add certificate\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forms;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CertFound extends Component {\r\n  state = { name: \"\", sender: \"\", course: \"\" };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container \"\r\n        style={{\r\n          fontFamily: \"Montserrat\",\r\n          background: \"#5dcbef\",\r\n          fontWeight: \"bold\",\r\n          border: \"4px solid black\",\r\n          fontSize: \"20px\",\r\n          marginTop: \"10px\"\r\n        }}\r\n      >\r\n        <div style={{ borderBottom: \" 1px solid black\" }}>\r\n          <h4>Certificate with following details found</h4>\r\n        </div>\r\n        <div>\r\n          Name:\r\n          <span\r\n            style={{ marginLeft: \"10px\", borderBottom: \" 2px solid black\" }}\r\n          >\r\n            {this.props.details[0]}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          Course:\r\n          <span\r\n            style={{ marginLeft: \"10px\", borderBottom: \" 2px solid black\" }}\r\n          >\r\n            {this.props.details[1]}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          Issued by:\r\n          <span\r\n            style={{ marginLeft: \"10px\", borderBottom: \" 2px solid black\" }}\r\n          >\r\n            {this.props.details[3]}\r\n          </span>\r\n        </div>\r\n        <div style={{ marginLeft: \"10px\", marginBottom: \"10px\" }}>\r\n          email:\r\n          <span style={{ borderBottom: \" 2px solid black\" }}>\r\n            {\" \" + this.props.details[2]}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CertFound;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport b1 from \"../b1.jpg\";\r\nimport CertFound from \"./certfound\";\r\n\r\nclass Getcert extends Component {\r\n  canBeSubmittedid() {\r\n    const id = this.state.id;\r\n    return id.length > 0;\r\n  }\r\n  canBeSubmittedtxh() {\r\n    const txh = this.state.txh;\r\n    return txh.length > 0;\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  getcertificate = event => {\r\n    event.preventDefault();\r\n    this.props.getcertificate(this.state);\r\n    //console.log(this);\r\n  };\r\n\r\n  gettransaction = event => {\r\n    event.preventDefault();\r\n    const url = \"https://ropsten.etherscan.io/tx/\" + this.state.txh;\r\n    window.open(url);\r\n    console.log(url);\r\n  };\r\n\r\n  state = {\r\n    id: \"\",\r\n    txh: \"\"\r\n  };\r\n  render() {\r\n    const isEnabledid = this.canBeSubmittedid();\r\n    const isEnabledtxh = this.canBeSubmittedtxh();\r\n    return (\r\n      <div\r\n        style={{\r\n          //backgroundImage: `url(${b1})`,\r\n          background: `url(${b1}) no-repeat `,\r\n          backgroundSize: \"auto\",\r\n          border: \"1px solid black\",\r\n          height: \"100vh\",\r\n          width: \"100%\"\r\n        }}\r\n        className=\"container-fluid \"\r\n      >\r\n        <div className=\" mx-auto w-50\">\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              fontFamily: \"Montserrat\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n            className=\" mt-3 mb-4\"\r\n          >\r\n            Verify the Certificate\r\n          </h1>\r\n          <Form\r\n            className=\"px-3 pt-4\"\r\n            onSubmit={this.getcertificate}\r\n            style={{ background: \"rgba(255,255,255,0.5)\" }}\r\n          >\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={this.state.id}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Certificate ID\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={!isEnabledid}\r\n              className=\"mt-2 mb-3\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Get certificate\r\n            </Button>\r\n          </Form>\r\n          {this.props.yes ? <CertFound details={this.props.details} /> : null}\r\n\r\n          <hr\r\n            className=\"mt-5 \"\r\n            style={{ color: \"red\", backgroundColor: \"red\", height: 5 }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\" mx-auto w-50 mb-5\">\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              fontFamily: \"Montserrat\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n            className=\"mt-5 mb-4\"\r\n          >\r\n            Verify the Transaction details\r\n          </h1>\r\n          <Form\r\n            className=\"px-3 pt-4\"\r\n            onSubmit={this.gettransaction}\r\n            style={{\r\n              marginBottom: \"57px\",\r\n              background: \"rgba(255,255,255,0.5)\"\r\n            }}\r\n          >\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"txh\"\r\n                value={this.state.txh}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Transaction hash provided on Certificate\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={!isEnabledtxh}\r\n              className=\"mt-2 mb-3\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Verify\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Getcert;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nclass Reg extends Component {\r\n  sendmail = event => {\r\n    event.preventDefault();\r\n    window.location.href = `mailto:${this.state.email}`;\r\n  };\r\n  state = {\r\n    email: \"apmlintern@gmail.com\"\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"pt-3\">\r\n        <h3>Email the following details:</h3>\r\n        <div className=\"w-50 container pt-3 pb-3 mx-auto\">\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Ethereum wallet Address</li>\r\n            <li className=\"list-group-item\">Institute name</li>\r\n            <li className=\"list-group-item\">Address</li>\r\n            <li className=\"list-group-item\">\r\n              Institute Registration details (scanned copy){\" \"}\r\n            </li>\r\n          </ul>\r\n          <Form onSubmit={this.sendmail}>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Send mail\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reg;\r\n","import React, { Component } from \"react\";\r\nimport hiw from \"../hiw.jpg\";\r\n\r\nclass Intro extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <img\r\n        src={hiw}\r\n        style={{ marginTop: \"5px\" }}\r\n        className=\"img-fluid\"\r\n        alt=\"Responsive image\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n","import web3 from \"./web3\";\r\n\r\n// export const address = \"0x598a458f6baf4a7bc6c09007efa9902e393fce77\";\r\nexport const address = \"0xF0cB2E4384924E29A644dF1aBbAFc794ab2e8c8f\";\r\n\r\nexport const abi = [\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"course\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"email\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    name: \"addcert\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"coladd\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"name\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    name: \"addCollege\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"added\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"certs\",\r\n    outputs: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"course\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"email\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"sender\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"col\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"checkcoll\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"getcert\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"getid\",\r\n    outputs: [\r\n      {\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  }\r\n];\r\n\r\nexport default new web3.eth.Contract(abi, address);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../certstyle.css\";\r\nimport printJs from \"print-js\";\r\n\r\nclass Certificate extends Component {\r\n  state = {};\r\n  onclickprint = event => {\r\n    event.preventDefault();\r\n    window.print();\r\n    //printJs(\"printcertificate\", \"html\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"w-100 pc \">\r\n        <div id=\"printcertificate\" className=\"w-75 cert\">\r\n          <div id=\"fname\">\r\n            <span>{this.props.sname}</span>\r\n          </div>\r\n          <div id=\"course\">\r\n            <style>{`@media print {#course{color:red;}}`}</style>\r\n            <span>{this.props.course} </span>\r\n          </div>\r\n          <div id=\"txh\">\r\n            <span>{this.props.txh}</span>\r\n          </div>\r\n          <div id=\"id\">\r\n            <span>{this.props.id}</span>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          className=\"btn\"\r\n          onClick={this.onclickprint}\r\n          variant=\"success\"\r\n          type=\"submit\"\r\n        >\r\n          Print\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Certificate;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport web3 from \"./web3.js\";\r\nimport \"./App.css\";\r\nimport Navhead from \"./components/navbar\";\r\nimport Forms from \"./components/form\";\r\nimport Getcert from \"./components/getcert\";\r\nimport Reg from \"./components/reg\";\r\nimport Intro from \"./components/intro\";\r\nimport certcontract from \"./config.js\";\r\nimport Certificate from \"./components/certificate\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    account: \"\",\r\n    name: \"\",\r\n    course: \"\",\r\n    txh: \"\",\r\n    id: \"\",\r\n    output: [],\r\n    tofound: false\r\n  };\r\n  componentDidMount() {\r\n    console.log('mounted')\r\n    this.loadBlockchainData();\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    //added line 30\r\n    await window.ethereum.enable()\r\n    const accounts = await web3.eth.getAccounts();\r\n    web3.eth.defaultAccount = accounts[0];\r\n    //console.log(certcontract);\r\n    console.log(accounts);\r\n    console.log(\"acc\", accounts[0]);\r\n    this.setState({ account: accounts[0] });\r\n  }\r\n\r\n  //myevent =()=> certcontract.added();\r\n  //myevent=>watch((error,result)=>{\r\n  //  console.log(result);\r\n  //});\r\n\r\n  add = data => {\r\n    //const certificates = new this.state.web3.eth.Contract(abi, address);\r\n    //console.log(data.fname, data.course, data.email);\r\n    var name = data.fname + \" \" + data.lname;\r\n    certcontract.methods.addcert(name, data.course, data.email).send(\r\n      {\r\n        from: this.state.account,\r\n        gas: 500000\r\n      },\r\n      (error, result) => {\r\n        if (error) console.log(\"error \" + error);\r\n        else {\r\n          this.setState({ name: data.fname + \" \" + data.lname });\r\n          this.setState({ course: data.course + \" \" + \"course\" });\r\n          this.setState({ txh: result });\r\n          console.log(result);\r\n          certcontract.methods\r\n            .getid()\r\n            .call({ from: this.state.account }, (error, result) => {\r\n              this.setState({ id: result });\r\n              if (!error) console.log(result);\r\n              else console.log(error);\r\n            });\r\n          //certcontract.events.added({}, (error, ev) => {\r\n          //to use event below 2 lines\r\n          //let key = Object.keys(ev[1].returnValues)[1];\r\n          //console.log(ev[1].returnValues[key]);\r\n          //});\r\n        }\r\n      }\r\n    );\r\n  };\r\n  get = data => {\r\n    //console.log(data.id);\r\n    certcontract.methods\r\n      .getcert(data.id)\r\n      .call({ from: this.state.account }, (error, result) => {\r\n        if (!error) {\r\n          console.log(result);\r\n          const v = Object.values(result);\r\n          this.setState({ output: v });\r\n          this.setState({ tofound: true });\r\n          //this.history.pushState(\"certfound\");\r\n          console.log(this.state.output);\r\n        } else alert(\"Certificate not found\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Navhead />\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => <Forms addcertificate={this.add} />}\r\n          />\r\n          <Route\r\n            path=\"/verify\"\r\n            render={() => (\r\n              <Getcert\r\n                getcertificate={this.get}\r\n                yes={this.state.tofound}\r\n                details={this.state.output}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/view\"\r\n            component={() => (\r\n              <Certificate\r\n                sname={this.state.name}\r\n                course={this.state.course}\r\n                txh={this.state.txh}\r\n                id={this.state.id}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/intro\" component={Intro} />\r\n          <Route path=\"/reg\" component={Reg} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}